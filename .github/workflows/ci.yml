name: Lint and test

on:
  pull_request:
    branches:
      - master
      - staging

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install isort==4.3.21 flake8 black mypy
      - name: Run linters
        uses: cognitedata/lint-action@v1.6.0
        with: #Black for linting, flake8 linting currently disabled, mypy for type hinting
          github_token: ${{ secrets.github_token }}
          black: true
          black_args: "--line-length 120"
          mypy: true
          mypy_args: "--ignore-missing-imports"

  testing:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip poetry
          poetry config virtualenvs.create false
          poetry install
      - name: Run tests
        run: |
          poetry run pytest -v --cov-report xml:coverage.xml --cov=src
          coverage xml
      - name: Codecov report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml