"""
import os
import yaml
from cognite.client.credentials import OAuthClientCredentials
from cognite.client import CogniteClient, ClientConfig
from cognite.replicator import assets, events, files, time_series, datapoints, sequences, sequence_rows

# SOURCE
SOURCE_TENANT_ID = "48d5043c-cf70-4c49-881c-c638f5796997"
SOURCE_CLIENT_ID = "18470de5-fc25-4527-ae17-5d53abfa32c3"
SOURCE_CLIENT_SECRET = "4Nf8Q~WYCJ0ufsd2LQ7ESGi1ezJff32Hbx_o5azT"
SOURCE_PROJECT = "publicdata"
SOURCE_CLUSTER = "api"

# DESTINATION
DEST_TENANT_ID = "d4febcbc-db24-4823-bffd-92fd05b9c6bc"
DEST_CLIENT_ID = "721d68b5-04d3-46be-a27a-afff1154652f"
DEST_CLIENT_SECRET = "EOX8Q~ktDeI3RmUfCmLAGmEo~ksJDDodGuKy1be5"
DEST_PROJECT = "sa-team"
DEST_CLUSTER = "bluefield"

### Autogenerated variables
SOURCE_SCOPES = [f"https://{SOURCE_CLUSTER}.cognitedata.com/.default"]
SOURCE_BASE_URL = f"https://{SOURCE_CLUSTER}.cognitedata.com"
SOURCE_TOKEN_URL = f"https://login.microsoftonline.com/{SOURCE_TENANT_ID}/oauth2/v2.0/token"
DEST_SCOPES = [f"https://{DEST_CLUSTER}.cognitedata.com/.default"]
DEST_BASE_URL = f"https://{DEST_CLUSTER}.cognitedata.com"
DEST_TOKEN_URL = f"https://login.microsoftonline.com/{DEST_TENANT_ID}/oauth2/v2.0/token"
COGNITE_CONFIG_FILE = "config/config.yml"
# Config
BATCH_SIZE = 10000  # this is the max size of a batch to be posted
NUM_THREADS = 10  # this is the max number of threads to be used
TIMEOUT = 90
PORT = 53000

if __name__ == "__main__":  # this is necessary because threading

    SOURCE_CLIENT = CogniteClient(
        ClientConfig(
            credentials=OAuthClientCredentials(
                token_url=SOURCE_TOKEN_URL,
                client_id=SOURCE_CLIENT_ID,
                scopes=SOURCE_SCOPES,
                client_secret=SOURCE_CLIENT_SECRET,
            ),
            project=SOURCE_PROJECT,
            base_url=SOURCE_BASE_URL,
            client_name="cognite-replicator-source",
        )
    )

    DEST_CLIENT = CogniteClient(
        ClientConfig(
            credentials=OAuthClientCredentials(
                token_url=DEST_TOKEN_URL,
                client_id=DEST_CLIENT_ID,
                scopes=DEST_SCOPES,
                client_secret=DEST_CLIENT_SECRET,
            ),
            project=DEST_PROJECT,
            base_url=DEST_BASE_URL,
            client_name="cognite-replicator-destination",
        )
    )
    t = []
    for ts in DEST_CLIENT.time_series.list(metadata={"_replicatedSource": "publicdata"}, limit=None):
        t.append(ts.id)
    DEST_CLIENT.time_series.delete(t)
    # assets.replicate(SOURCE_CLIENT, DEST_CLIENT)
    # events.replicate(SOURCE_CLIENT, DEST_CLIENT, BATCH_SIZE, NUM_THREADS)
    # files.replicate(SOURCE_CLIENT, DEST_CLIENT, BATCH_SIZE, NUM_THREADS)
    # time_series.replicate(SOURCE_CLIENT, DEST_CLIENT, BATCH_SIZE, NUM_THREADS)
    # datapoints.replicate(SOURCE_CLIENT, DEST_CLIENT)
    # sequences.replicate(SOURCE_CLIENT, DEST_CLIENT, BATCH_SIZE, NUM_THREADS)
    # sequence_rows.replicate(SOURCE_CLIENT, DEST_CLIENT, BATCH_SIZE, NUM_THREADS)

"""

import yaml
from cognite.replicator.__main__ import main
import os
import os
import yaml
from cognite.client.credentials import OAuthClientCredentials
from cognite.client import CogniteClient, ClientConfig
from cognite.replicator import assets, events, files, time_series, datapoints, sequences, sequence_rows


# DESTINATION
DEST_TENANT_ID = "d4febcbc-db24-4823-bffd-92fd05b9c6bc"
DEST_CLIENT_ID = "721d68b5-04d3-46be-a27a-afff1154652f"
DEST_CLIENT_SECRET = "EOX8Q~ktDeI3RmUfCmLAGmEo~ksJDDodGuKy1be5"
DEST_PROJECT = "sa-team"
DEST_CLUSTER = "bluefield"

### Autogenerated variables
DEST_SCOPES = [f"https://{DEST_CLUSTER}.cognitedata.com/.default"]
DEST_BASE_URL = f"https://{DEST_CLUSTER}.cognitedata.com"
DEST_TOKEN_URL = f"https://login.microsoftonline.com/{DEST_TENANT_ID}/oauth2/v2.0/token"
COGNITE_CONFIG_FILE = "config/config.yml"
# Config
BATCH_SIZE = 10000  # this is the max size of a batch to be posted
NUM_THREADS = 10  # this is the max number of threads to be used
TIMEOUT = 90
PORT = 53000

DEST_CLIENT = CogniteClient(
    ClientConfig(
        credentials=OAuthClientCredentials(
            token_url=DEST_TOKEN_URL,
            client_id=DEST_CLIENT_ID,
            scopes=DEST_SCOPES,
            client_secret=DEST_CLIENT_SECRET,
        ),
        project=DEST_PROJECT,
        base_url=DEST_BASE_URL,
        client_name="cognite-replicator-destination",
    )
)
"""
t = []
for ts in DEST_CLIENT.time_series.list(metadata={"_replicatedSource": "publicdata"}, limit=None):
    t.append(ts.id)
    DEST_CLIENT.time_series.delete(t, ignore_unknown_ids=True)
"""
if __name__ == "__main__":  # this is necessary because threading
    COGNITE_CONFIG_FILE = yaml.safe_load("config/config.yml")
    os.environ["COGNITE_CONFIG_FILE"] = COGNITE_CONFIG_FILE
    main()
